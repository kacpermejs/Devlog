steps:
  # Decrypt .env file
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
    - kms
    - decrypt
    - --ciphertext-file=.env.enc
    - --plaintext-file=.env
    - --location=global
    - --keyring=devlog-env
    - --key=cloudbuild-env

  # Decrypt environment.ts file
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
    - kms
    - decrypt
    - --ciphertext-file=environment.ts.enc
    - --plaintext-file=environment.ts
    - --location=global
    - --keyring=devlog-env
    - --key=cloudbuild-env

  # Decrypt environment.prod.ts file
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
    - kms
    - decrypt
    - --ciphertext-file=environment.prod.ts.enc
    - --plaintext-file=environment.prod.ts
    - --location=global
    - --keyring=devlog-env
    - --key=cloudbuild-env

  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/${_FIREBASE_PROJECT_ID}/firebase', './dockerfiles/firebase']

  - name: 'node:18.10.0'
    entrypoint: 'npm'
    args: ['install']

  - name: 'node:18.10.0'
    entrypoint: 'npm'
    args: ['run', 'build']

  - name: 'gcr.io/${_FIREBASE_PROJECT_ID}/firebase'
    args: ['use', '${_FIREBASE_PROJECT_ID}', '--token', '${_FIREBASE_TOKEN}']

  - name: 'gcr.io/${_FIREBASE_PROJECT_ID}/firebase'
    args: ['target:apply', 'hosting', 'devlog-4ecc0', 'devlog-4ecc0', '--token', '${_FIREBASE_TOKEN}']

  # - name: 'gcr.io/${_FIREBASE_PROJECT_ID}/firebase'
  #   args: ['deploy', '--token', '${_FIREBASE_TOKEN}', '--only', 'hosting:devlog-4ecc0']

  - name: 'gcr.io/cloud-builders/npm'
    args: ['run', 'deploy']

timeout: 1200s
